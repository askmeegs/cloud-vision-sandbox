# Overview: build and create a release via Google Cloud Deploy for GKE
# NOTE: currently requires SCM triggering due to dependency on the COMMIT_SHA variable
# substitutions:
#   _REPO_NAME: demo-app
#   _APP_NAME: demo-app
#   _PIPELINE_NAME: demo-app-pipeline
steps:
  # integration tests app with Maven
  - name: maven:3-openjdk-17-slim
    entrypoint: mvn
    args: ["verify"]
    dir: ${_APP_NAME}
  # build app with Maven
  - name: maven:3-openjdk-17-slim
    entrypoint: mvn
    args: ["package", "-Dmaven.test.skip=true"]
    dir: ${_APP_NAME}
  # Build and tag using commit sha
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '.', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_APP_NAME}:${COMMIT_SHA}', '-f', 'Dockerfile']
    dir: ${_APP_NAME}
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_APP_NAME}:${COMMIT_SHA}']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '${_APP_NAME}', '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_APP_NAME}:${COMMIT_SHA}', '--binary-authorization', 'default', '--region', 'us-central1', '--platform', 'managed', '--memory', '1Gi']